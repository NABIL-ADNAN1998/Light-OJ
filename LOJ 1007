// python code
test = int(input())


def phi(n):
    x = n
    ans = x
    i = 2
    while ((i**2) <= x):

        if (x % i == 0):
            while x % i == 0:
                x /= i

            ans *= (i-1)
            ans /= i
        i += 1

    if x > 1:
        ans *= (x-1)
        ans /= x

    #print('ans is : '+str(ans))
    return int((ans*ans))


for T in range(1, test+1):
    a, b = map(int, input().split())
    sum = 0
    for i in range(a, b+1):
        sum += phi(i)
        #print('sum is : ' + str(sum))

    print('Case '+str(T) + ': '+str(sum))

    T += 1
    
    
    
    // C++ code
    
#include <bits/stdc++.h>
#include <vector>
using namespace std;
#define ll long long
#define M 5000000


unsigned long long phi[M + 2];

void calculate_phi()
{
    for (ll i = 2; i <= M + 2; i++)
    {
        phi[i] = i;
    }
    for (ll i = 2; i <= M + 2; i++)
    {
        if (phi[i] == i)
        {
            for (ll j = i; j <= M + 2; j += i)
            {
                phi[j] -= (phi[j] / i);
            }
        }
    }
}

int main()
{
    calculate_phi();
   

    for (ll i = 2; i <= M; i++)
    {
        
        unsigned long long temp = phi[i] * phi[i];
        unsigned long long prev = phi[i - 1];
        phi[i] = temp + prev;
    }

    ll test;
    cin >> test;
    for (ll t = 1; t <= test; t++)
    {
        unsigned long long a, b;
        cin >> a >> b;
        unsigned long long ans = phi[b] - phi[a - 1];
        cout << "Case " << t << ": " << ans << endl;
    }
}
